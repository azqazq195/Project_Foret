package member.controller;

import java.io.File;
import java.io.FileOutputStream;

import javax.servlet.http.HttpServletRequest;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import member.bean.MemberDTO;
import photo.bean.PhotoDTO;
import photo.controller.photoService;

@Controller
public class MemberController {
	@Autowired
	MemberService memberService;
	@Autowired
	photoService photoService;
	
	@RequestMapping(value = "/member/member_insert.do")
	public ModelAndView memberWrite(HttpServletRequest request, MultipartFile photo) throws Exception {
		request.setCharacterEncoding("UTF-8");
		String dir = request.getSession().getServletContext().getRealPath("/storage");
		
		// 기본 정보
		String name = request.getParameter("name");
	    String nickname = request.getParameter("nickname");
	    String birth = request.getParameter("birth");
	    String email = request.getParameter("email");
	    
	    // 태그, 지역, 프로필 사진은 미설정 가능
	    String tag[] = request.getParameterValues("tag");
	    String region_si[] = request.getParameterValues("region_si");
	    String region_gu[] = request.getParameterValues("region_gu");
	    
	    // 회원 등록, 사진 등록
	    // 태그, 지역 아이디 찾기
	    // 회원과 (태그, 지역, 사진) 연결
	    	
	    
	    MemberDTO memberDTO = new MemberDTO();
	    memberDTO.setName(name);
	    memberDTO.setNickname(nickname);
	    memberDTO.setBirth(birth);
	    memberDTO.setEmail(email);
	    memberDTO.setTag(tag);
	    memberDTO.setRegion_si(region_si);
	    memberDTO.setRegion_gu(region_gu);
	    
	    int memberResult = memberService.memberWrite(memberDTO);
	    // 회원 등록 후 회원 아이디 가져오기
	    int member_id = memberDTO.getId();
	    
	    String memberRT = "FAIL";   
	    if(memberResult > 0) memberRT = "OK";
	    // 로그
	    log(memberDTO);
	    
	    if(memberRT.equals("OK")) {
	    	if(photo != null) {
	    		String originname = photo.getOriginalFilename();
	    		String filename = photo.getOriginalFilename();
	    		int lastIndex = originname.lastIndexOf(".");
	            String filetype = originname.substring(lastIndex + 1);
	            int filesize = (int)photo.getSize();
	            File file = new File(dir, filename);
	            FileCopyUtils.copy(photo.getInputStream(), new FileOutputStream(file));
	            
	            PhotoDTO photoDTO = new PhotoDTO();
	            photoDTO.setDir(dir);
	            photoDTO.setOriginname(originname);
	            photoDTO.setFilename(filename);
	            photoDTO.setFiletype(filetype);
	            photoDTO.setFilesize(filesize);
	            photoDTO.setReference_id(member_id);
	            
	            int photoResult = photoService.memberPhotoWrite(photoDTO);
	            String photoRT = "FAIL";   
	    	    if(photoResult > 0) photoRT = "OK";
	    	}
	    }
	    
	    JSONObject json = new JSONObject();
	    json.put("memberRT", memberRT);
	    json.put("memberRT", memberRT);
	      
	    // 화면 네비게이션
	    ModelAndView modelAndView = new ModelAndView();
	    modelAndView.addObject("json", json);
	    modelAndView.setViewName("member.jsp");
	       
	    return modelAndView;
	}
	
	public void log(MemberDTO memberDTO) {
		System.out.println();
	    System.out.println("------------------");
	    System.out.println("id : " + memberDTO.getId());
	    System.out.println("name : " + memberDTO.getName());
	    System.out.println("nickname : " + memberDTO.getNickname());
	    System.out.println("birth : " + memberDTO.getBirth());
	    System.out.println("email : " + memberDTO.getEmail());
	    if(memberDTO.getTag() != null) {
	    	for(String s : memberDTO.getTag()) {
		    	System.out.print("tag : ");
		    	System.out.println(s);
		    }
	    }
	    if(memberDTO.getRegion_si() != null) {
	    	for(String s : memberDTO.getRegion_si()) {
		    	System.out.print("region_si : ");
		    	System.out.println(s);
		    };
	    }
	    if(memberDTO.getRegion_gu() != null) {
	    	for(String s : memberDTO.getRegion_gu()) {
		    	System.out.print("region_gu : ");
		    	System.out.println(s);
		    }
	    }
	    System.out.println("------------------");
	    System.out.println();
	}
}
